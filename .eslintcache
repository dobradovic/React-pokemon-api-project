[{"/Users/nebojsa/Desktop/cinnamon-task/src/index.js":"1","/Users/nebojsa/Desktop/cinnamon-task/src/App.js":"2","/Users/nebojsa/Desktop/cinnamon-task/src/serviceWorker.js":"3","/Users/nebojsa/Desktop/cinnamon-task/src/router/index.js":"4","/Users/nebojsa/Desktop/cinnamon-task/src/features/component/Pokemon/Pokemon.js":"5","/Users/nebojsa/Desktop/cinnamon-task/src/features/component/Pokemons/Pokemons.js":"6","/Users/nebojsa/Desktop/cinnamon-task/src/features/container/HomeWrap/HomeWrap.js":"7","/Users/nebojsa/Desktop/cinnamon-task/src/axios/axiosPokemons.js":"8","/Users/nebojsa/Desktop/cinnamon-task/src/features/component/UI/Loader/Loader.js":"9","/Users/nebojsa/Desktop/cinnamon-task/src/features/component/Filters/Filters.js":"10"},{"size":613,"mtime":1611695093627,"results":"11","hashOfConfig":"12"},{"size":133,"mtime":1611862115908,"results":"13","hashOfConfig":"12"},{"size":5141,"mtime":1611405907594,"results":"14","hashOfConfig":"12"},{"size":584,"mtime":1611912963595,"results":"15","hashOfConfig":"12"},{"size":3912,"mtime":1611914397340,"results":"16","hashOfConfig":"12"},{"size":2674,"mtime":1611915183764,"results":"17","hashOfConfig":"12"},{"size":533,"mtime":1611913906281,"results":"18","hashOfConfig":"12"},{"size":140,"mtime":1611416291026,"results":"19","hashOfConfig":"12"},{"size":292,"mtime":1611596640030,"results":"20","hashOfConfig":"12"},{"size":1249,"mtime":1611914397338,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"998f4b",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"/Users/nebojsa/Desktop/cinnamon-task/src/index.js",[],["49","50"],"/Users/nebojsa/Desktop/cinnamon-task/src/App.js",[],"/Users/nebojsa/Desktop/cinnamon-task/src/serviceWorker.js",[],"/Users/nebojsa/Desktop/cinnamon-task/src/router/index.js",["51","52"],"import React from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tSwitch,\n\tRedirect,\n} from \"react-router-dom\";\nimport Pokemon from \"../features/component/Pokemon/Pokemon\";\nimport Pokemons from \"../features/component/Pokemons/Pokemons\";\nimport HomeWrap from \"../features/container/HomeWrap/HomeWrap\";\n\nexport default () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Route path=\"/:path?\">\n\t\t\t\t<HomeWrap>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Pokemons} />\n\t\t\t\t\t\t<Route path=\"/pokemon/:name\" exact component={Pokemon} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</HomeWrap>\n\t\t\t</Route>\n\t\t</Router>\n\t);\n};\n","/Users/nebojsa/Desktop/cinnamon-task/src/features/component/Pokemon/Pokemon.js",["53","54","55"],"import React, { useState, useEffect } from \"react\";\nimport classes from \"./Pokemon.module.scss\";\nimport axiosPokemons from \"../../../axios/axiosPokemons\";\nimport Loader from \"../UI/Loader/Loader\";\nimport { Modal, useModal, ModalTransition } from \"react-simple-hook-modal\";\nimport \"react-simple-hook-modal/dist/styles.css\";\nimport Slider from \"react-slick\";\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction Pokemon(props) {\n\tconst { name } = props.match.params;\n\tconst { isModalOpen, openModal, closeModal } = useModal();\n\tconst [pokemonsByType, setPokemonsByType] = useState([]);\n\n\tconst [pokemon, setPokemon] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst modalStyle = {\n\t\tcolor: \"gold\",\n\t\ttextAlign: \"center\",\n\t\tmarginBottom: \"1rem\",\n\t};\n\n\tconst modalStylePokemons = {\n\t\tcolor: \"orange\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\ttextAlign: \"center\",\n\t};\n\n\tvar settings = {\n\t\tdots: true,\n\t\tinfinite: true,\n\t\tspeed: 500,\n\t\tslidesToShow: 1,\n\t\tslidesToScroll: 1,\n\t};\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\taxiosPokemons\n\t\t\t.get(`/pokemon/${name}`)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tsetPokemon(res.data);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t}, []);\n\n\tconst typeHandler = (event) => {\n\t\tsetIsLoading(true);\n\t\taxiosPokemons\n\t\t\t.get(`type/${event.target.innerText}`)\n\t\t\t.then((res) => {\n\t\t\t\tsetPokemonsByType(res.data.pokemon);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t\topenModal();\n\t};\n\n\tconst pokemonByTypeShow = pokemonsByType.map((pokemon) => {\n\t\treturn <span key={pokemon.pokemon.name}>{pokemon.pokemon.name}</span>;\n\t});\n\n\tconst pokemonType = pokemon.types\n\t\t? pokemon.types.map((type) => {\n\t\t\t\treturn (\n\t\t\t\t\t<span\n\t\t\t\t\t\tkey={type.type.name}\n\t\t\t\t\t\tclassName={classes.ShowPokemonsByType}\n\t\t\t\t\t\tonClick={typeHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{type.type.name}\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t  })\n\t\t: \"\";\n\n\tconst pokemonAbility = pokemon.abilities\n\t\t? pokemon.abilities.map((ability) => {\n\t\t\t\treturn <span key={ability.ability.name}>{ability.ability.name}</span>;\n\t\t  })\n\t\t: \"\";\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tid=\"any-unique-identifier\"\n\t\t\t\tisOpen={isModalOpen}\n\t\t\t\ttransition={ModalTransition.BOTTOM_UP}\n\t\t\t>\n\t\t\t\t<button onClick={closeModal}>X</button>\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3 style={modalStyle}>\n\t\t\t\t\t\t\tPokemons by choosen type: - {pokemonByTypeShow.length}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div style={modalStylePokemons}>{pokemonByTypeShow}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Modal>\n\n\t\t\t<main>\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : (\n\t\t\t\t\t<article className={classes.SinglePokemon}>\n\t\t\t\t\t\t<Slider {...settings}>\n\t\t\t\t\t\t\t{pokemon.sprites\n\t\t\t\t\t\t\t\t? Object.entries(pokemon.sprites).map(([key, value]) => {\n\t\t\t\t\t\t\t\t\t\t//umesto placeholdera - preskacem prikaz slike koja nema value\n\t\t\t\t\t\t\t\t\t\tif (value && typeof value === \"string\")\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sliderWrap\" key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"yours-custom-class\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t</Slider>\n\t\t\t\t\t\t<div className={classes.PokemonDescription}>\n\t\t\t\t\t\t\t<h1 className={classes.PokemonTitle}>{pokemon.name}</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span className={classes.PokemonType}>\n\t\t\t\t\t\t\t{pokemonType}\n\t\t\t\t\t\t\t<p className={classes.PokemonAbilityType}>Type : </p>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className={classes.PokemonAbility}>\n\t\t\t\t\t\t\t{pokemonAbility}\n\t\t\t\t\t\t\t<p className={classes.PokemonAbilityTitle}>Abilities : </p>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</article>\n\t\t\t\t)}\n\n\t\t\t\t<a href=\"/\" className={classes.LinkGoBack}>\n\t\t\t\t\t<button className={classes.BtnGoBack}>Go back</button>\n\t\t\t\t</a>\n\t\t\t</main>\n\t\t</>\n\t);\n}\n\nexport default Pokemon;\n","/Users/nebojsa/Desktop/cinnamon-task/src/features/component/Pokemons/Pokemons.js",["56","57"],"import React, { useState, useEffect } from \"react\";\nimport classes from \"./Pokemons.module.scss\";\nimport Loader from \"../UI/Loader/Loader\";\nimport axiosPokemons from \"../../../axios/axiosPokemons\";\nimport { Link } from \"react-router-dom\";\n\nfunction Pokemons() {\n\tconst [pokemons, setPokemons] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [searchByName, setSearchByName] = useState(\"\");\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage, setPostsPerPage] = useState(21);\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\taxiosPokemons\n\t\t\t.get(\"pokemon?limit=151\")\n\t\t\t.then((res) => {\n\t\t\t\tsetPokemons(res.data.results);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t}, []);\n\n\tconst indexOfLastPost = currentPage * postsPerPage;\n\tconst indexOfFirstPost = indexOfLastPost - postsPerPage;\n\tconst pageNumbers = [];\n\tconst totalPokemons = pokemons.length;\n\tfor (let i = 1; i <= Math.ceil(totalPokemons / postsPerPage); i++) {\n\t\tpageNumbers.push(i);\n\t}\n\n\tconst paginate = (pageNumber) => {\n\t\tsetCurrentPage(pageNumber);\n\t};\n\n\tlet filterName = pokemons\n\t\t.filter((pokemon) =>\n\t\t\tpokemon.name.toLowerCase().includes(searchByName.toLowerCase())\n\t\t)\n\t\t.map((pokemon) => {\n\t\t\treturn (\n\t\t\t\t<Link\n\t\t\t\t\tto={`/pokemon/${pokemon.name}`}\n\t\t\t\t\tclassName={classes.Pokemon}\n\t\t\t\t\tkey={pokemon.name}\n\t\t\t\t>\n\t\t\t\t\t<p className={classes.PokemonTitle}>{pokemon.name}</p>\n\t\t\t\t</Link>\n\t\t\t);\n\t\t});\n\n\tlet pokemonList = pokemons\n\t\t.slice(indexOfFirstPost, indexOfLastPost)\n\t\t.map((pokemon) => {\n\t\t\treturn (\n\t\t\t\t<Link\n\t\t\t\t\tto={`/pokemon/${pokemon.name}`}\n\t\t\t\t\tclassName={classes.Pokemon}\n\t\t\t\t\tkey={pokemon.name}\n\t\t\t\t>\n\t\t\t\t\t<p className={classes.PokemonTitle}>{pokemon.name}</p>\n\t\t\t\t</Link>\n\t\t\t);\n\t\t});\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.FilterOptions}>\n\t\t\t\t<div className={classes.FiltersFormBlock}>\n\t\t\t\t\t<label className={classes.FilterLabel}>Search:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName={classes.FilterInput}\n\t\t\t\t\t\tplaceholder=\"Pokemon name...\"\n\t\t\t\t\t\tonChange={(event) => setSearchByName(event.target.value)}\n\t\t\t\t\t></input>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.Pokemons}>\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : searchByName === \"\" ? (\n\t\t\t\t\tpokemonList\n\t\t\t\t) : filterName.length > 0 ? (\n\t\t\t\t\tfilterName\n\t\t\t\t) : (\n\t\t\t\t\t<span className={classes.Message}>no match</span>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className={classes.Pagination}>\n\t\t\t\t{pageNumbers.map((number) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={number}>\n\t\t\t\t\t\t\t<a onClick={() => paginate(number)} href=\"#\">\n\t\t\t\t\t\t\t\t{number}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Pokemons;\n","/Users/nebojsa/Desktop/cinnamon-task/src/features/container/HomeWrap/HomeWrap.js",["58"],"import React from \"react\";\nimport classes from \"./HomeWrap.module.scss\";\nimport Logo from \"../../../assets/images/logo.png\";\n\nfunction HomeWrap({ children }) {\n\treturn (\n\t\t<>\n\t\t\t<header className={classes.Header}>\n\t\t\t\t{/* <h3 className={classes.HeaderTitle}>Cinnamon task - React Developer</h3> */}\n\t\t\t\t<a href=\"/\">\n\t\t\t\t\t<img src={Logo} alt=\"Logo image\" id=\"logo-img\" />\n\t\t\t\t</a>\n\t\t\t</header>\n\t\t\t{children}\n\t\t\t<footer className={classes.Footer}>\n\t\t\t\tCinnamon task - React Developer\n\t\t\t</footer>\n\t\t</>\n\t);\n}\n\nexport default HomeWrap;\n","/Users/nebojsa/Desktop/cinnamon-task/src/axios/axiosPokemons.js",[],"/Users/nebojsa/Desktop/cinnamon-task/src/features/component/UI/Loader/Loader.js",[],"/Users/nebojsa/Desktop/cinnamon-task/src/features/component/Filters/Filters.js",["59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport classes from \"./Filters.module.scss\";\nimport axiosPokemons from \"../../../axios/axiosPokemons\";\n\nfunction Filters() {\n\tconst searchName = (event) => {\n\t\tconsole.log(event.target.value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.FilterOptions}>\n\t\t\t\t<div className={classes.FiltersFormBlock}>\n\t\t\t\t\t<label className={classes.FilterLabel}>Search:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName={classes.FilterInput}\n\t\t\t\t\t\tplaceholder=\"Pokemon name...\"\n\t\t\t\t\t\tonChange={searchName}\n\t\t\t\t\t></input>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.FiltersFormBlock}>\n\t\t\t\t\t<label className={classes.FilterLabel}>Type:</label>\n\t\t\t\t\t<select className={classes.FilterInput}>\n\t\t\t\t\t\t<option value=\"0\">All</option>\n\t\t\t\t\t\t<option>Pokemon 2</option>\n\t\t\t\t\t\t<option>Pokemon 3</option>\n\t\t\t\t\t\t<option>Pokemon 4</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.FiltersFormBlock}>\n\t\t\t\t\t<label className={classes.FilterLabel}>Ability:</label>\n\t\t\t\t\t<select className={classes.FilterInput}>\n\t\t\t\t\t\t<option value=\"0\">All</option>\n\t\t\t\t\t\t<option>Pokemon 2</option>\n\t\t\t\t\t\t<option>Pokemon 3</option>\n\t\t\t\t\t\t<option>Pokemon 4</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Filters;\n",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":2,"nodeType":"70","messageId":"71","endLine":6,"endColumn":10},{"ruleId":"72","severity":1,"message":"73","line":12,"column":1,"nodeType":"74","endLine":25,"endColumn":3},{"ruleId":"75","severity":1,"message":"76","line":54,"column":5,"nodeType":"77","endLine":54,"endColumn":7,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":122,"column":62,"nodeType":"81","messageId":"82","endLine":122,"endColumn":64},{"ruleId":"83","severity":1,"message":"84","line":127,"column":14,"nodeType":"85","endLine":133,"endColumn":16},{"ruleId":"68","severity":1,"message":"86","line":12,"column":23,"nodeType":"70","messageId":"71","endLine":12,"endColumn":38},{"ruleId":"87","severity":1,"message":"88","line":98,"column":8,"nodeType":"85","endLine":98,"endColumn":53},{"ruleId":"89","severity":1,"message":"90","line":10,"column":6,"nodeType":"85","endLine":10,"endColumn":55},{"ruleId":"68","severity":1,"message":"91","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"92","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"93","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":21},{"ruleId":"64","replacedBy":"94"},{"ruleId":"66","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["98"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setPostsPerPage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axiosPokemons' is defined but never used.",["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [name]",{"range":"101","text":"102"},[1315,1317],"[name]"]